{"ast":null,"code":"// import createSlice, createAsyncThunk\n// thunk is there for asynchronous tasks\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport MovieApi from \"../../common/api/MovieApi\";\nimport { APIKey } from \"../../common/api/MovieApiKey\"; // the thunk takes two arguments - name (string) and a payload-creator callback function\n// the name is usually a combo of the reducer's name and the name of the variable the thunk is assigned to\n// the callback function, in this case, is the movie fetch function\n// optionally, the thunk can take a third argument - an object\n\nexport const fetchAsyncMovies = createAsyncThunk(\"movies/fetchAsyncMovies\", async () => {\n  const movieText = \"Harry\";\n  const response = await MovieApi.get(`?apiKey=${APIKey}&s=${movieText}&type=movie`);\n  return response.data;\n});\nexport const fetchAsyncShows = createAsyncThunk(\"movies/fetchAsyncShows\", async () => {\n  const seriesText = \"Harry\";\n  const response = await MovieApi.get(`?apiKey=${APIKey}&s=${seriesText}&type=series`);\n  return response.data;\n}); // initial state\n\nconst initialState = {\n  movies: {}\n}; // create the movies slice\n\nconst movieSlice = createSlice({\n  // name of the slice\n  name: \"movies\",\n  // initial state\n  initialState,\n  // reducers/actions object\n  reducers: {\n    addMovies: (state, _ref) => {\n      let {\n        payload\n      } = _ref;\n      // immer takes care of state immutability\n      state.movies = payload;\n    }\n  },\n  // extra reducers handle work outside the component\n  extraReducers: {\n    [fetchAsyncMovies.pending]: () => {\n      console.log(\"pending\");\n    },\n    [fetchAsyncMovies.fulfilled]: (state, _ref2) => {\n      let {\n        payload\n      } = _ref2;\n      console.log(\"fetched successflly\");\n      return { ...state,\n        movies: payload\n      };\n    },\n    [fetchAsyncMovies.rejected]: () => {\n      console.log(\"rejected\");\n    }\n  }\n});\nexport const {\n  addMovies\n} = movieSlice.actions; // func to get all the movies in the state\n\nexport const getAllMovies = state => state.movies.movies;\nexport default movieSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","MovieApi","APIKey","fetchAsyncMovies","movieText","response","get","data","fetchAsyncShows","seriesText","initialState","movies","movieSlice","name","reducers","addMovies","state","payload","extraReducers","pending","console","log","fulfilled","rejected","actions","getAllMovies","reducer"],"sources":["/home/miki/Documents/Programming/redux-toolkit-movie-rating-app/src/features/movies/movieSlice.js"],"sourcesContent":["// import createSlice, createAsyncThunk\n// thunk is there for asynchronous tasks\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport MovieApi from \"../../common/api/MovieApi\";\nimport { APIKey } from \"../../common/api/MovieApiKey\";\n\n// the thunk takes two arguments - name (string) and a payload-creator callback function\n// the name is usually a combo of the reducer's name and the name of the variable the thunk is assigned to\n// the callback function, in this case, is the movie fetch function\n// optionally, the thunk can take a third argument - an object\n\nexport const fetchAsyncMovies = createAsyncThunk(\n    \"movies/fetchAsyncMovies\",\n\n    async () => {\n        const movieText = \"Harry\";\n        const response = await MovieApi.get(\n            `?apiKey=${APIKey}&s=${movieText}&type=movie`\n        );\n        return response.data;\n    }\n);\n\nexport const fetchAsyncShows = createAsyncThunk(\n    \"movies/fetchAsyncShows\",\n\n    async () => {\n        const seriesText = \"Harry\";\n        const response = await MovieApi.get(\n            `?apiKey=${APIKey}&s=${seriesText}&type=series`\n        );\n        return response.data;\n    }\n);\n\n// initial state\nconst initialState = {\n    movies: {},\n};\n\n// create the movies slice\nconst movieSlice = createSlice({\n    // name of the slice\n    name: \"movies\",\n    // initial state\n    initialState,\n    // reducers/actions object\n    reducers: {\n        addMovies: (state, { payload }) => {\n            // immer takes care of state immutability\n            state.movies = payload;\n        },\n    },\n    // extra reducers handle work outside the component\n    extraReducers: {\n        [fetchAsyncMovies.pending]: () => {\n            console.log(\"pending\");\n        },\n        [fetchAsyncMovies.fulfilled]: (state, { payload }) => {\n            console.log(\"fetched successflly\");\n            return { ...state, movies: payload };\n        },\n        [fetchAsyncMovies.rejected]: () => {\n            console.log(\"rejected\");\n        },\n    },\n});\n\nexport const { addMovies } = movieSlice.actions;\n\n// func to get all the movies in the state\nexport const getAllMovies = (state) => state.movies.movies;\nexport default movieSlice.reducer;\n"],"mappings":"AAAA;AACA;AACA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,SAASC,MAAT,QAAuB,8BAAvB,C,CAEA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,gBAAgB,GAAGH,gBAAgB,CAC5C,yBAD4C,EAG5C,YAAY;EACR,MAAMI,SAAS,GAAG,OAAlB;EACA,MAAMC,QAAQ,GAAG,MAAMJ,QAAQ,CAACK,GAAT,CAClB,WAAUJ,MAAO,MAAKE,SAAU,aADd,CAAvB;EAGA,OAAOC,QAAQ,CAACE,IAAhB;AACH,CAT2C,CAAzC;AAYP,OAAO,MAAMC,eAAe,GAAGR,gBAAgB,CAC3C,wBAD2C,EAG3C,YAAY;EACR,MAAMS,UAAU,GAAG,OAAnB;EACA,MAAMJ,QAAQ,GAAG,MAAMJ,QAAQ,CAACK,GAAT,CAClB,WAAUJ,MAAO,MAAKO,UAAW,cADf,CAAvB;EAGA,OAAOJ,QAAQ,CAACE,IAAhB;AACH,CAT0C,CAAxC,C,CAYP;;AACA,MAAMG,YAAY,GAAG;EACjBC,MAAM,EAAE;AADS,CAArB,C,CAIA;;AACA,MAAMC,UAAU,GAAGb,WAAW,CAAC;EAC3B;EACAc,IAAI,EAAE,QAFqB;EAG3B;EACAH,YAJ2B;EAK3B;EACAI,QAAQ,EAAE;IACNC,SAAS,EAAE,CAACC,KAAD,WAAwB;MAAA,IAAhB;QAAEC;MAAF,CAAgB;MAC/B;MACAD,KAAK,CAACL,MAAN,GAAeM,OAAf;IACH;EAJK,CANiB;EAY3B;EACAC,aAAa,EAAE;IACX,CAACf,gBAAgB,CAACgB,OAAlB,GAA4B,MAAM;MAC9BC,OAAO,CAACC,GAAR,CAAY,SAAZ;IACH,CAHU;IAIX,CAAClB,gBAAgB,CAACmB,SAAlB,GAA8B,CAACN,KAAD,YAAwB;MAAA,IAAhB;QAAEC;MAAF,CAAgB;MAClDG,OAAO,CAACC,GAAR,CAAY,qBAAZ;MACA,OAAO,EAAE,GAAGL,KAAL;QAAYL,MAAM,EAAEM;MAApB,CAAP;IACH,CAPU;IAQX,CAACd,gBAAgB,CAACoB,QAAlB,GAA6B,MAAM;MAC/BH,OAAO,CAACC,GAAR,CAAY,UAAZ;IACH;EAVU;AAbY,CAAD,CAA9B;AA2BA,OAAO,MAAM;EAAEN;AAAF,IAAgBH,UAAU,CAACY,OAAjC,C,CAEP;;AACA,OAAO,MAAMC,YAAY,GAAIT,KAAD,IAAWA,KAAK,CAACL,MAAN,CAAaA,MAA7C;AACP,eAAeC,UAAU,CAACc,OAA1B"},"metadata":{},"sourceType":"module"}