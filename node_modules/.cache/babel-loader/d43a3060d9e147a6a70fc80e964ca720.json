{"ast":null,"code":"// import createSlice, createAsyncThunk\n// thunk is there for asynchronous tasks\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport MovieApi from \"../../common/api/MovieApi\";\nimport { APIKey } from \"../../common/api/MovieApiKey\"; // the thunk takes two arguments - name (string) and a payload-creator callback function\n// the name is usually a combo of the reducer's name and the name of the variable the thunk is assigned to\n// the callback function, in this case, is the movie fetch function\n// optionally, the thunk can take a third argument - an object\n\nexport const fetchAsyncMovies = createAsyncThunk(\"movies/fetchAsyncMovies\", async term => {\n  const response = await MovieApi.get(`?apiKey=${APIKey}&s=${term}&type=movie`);\n  return response.data;\n});\nexport const fetchAsyncShows = createAsyncThunk(\"movies/fetchAsyncShows\", async term => {\n  const response = await MovieApi.get(`?apiKey=${APIKey}&s=${term}&type=series`);\n  return response.data;\n});\nexport const fetchAsyncMovieOrShowDetail = createAsyncThunk(\"movies/fetchAsyncMovieOrShowDetail\", async id => {\n  const response = await MovieApi.get(`?apiKey=${APIKey}&i=${id}&Plot=full`);\n  return response.data;\n}); // initial state\n\nconst initialState = {\n  movies: {},\n  shows: {},\n  selectMovieOrShow: {}\n}; // create the movies slice\n\nconst movieSlice = createSlice({\n  // name of the slice\n  name: \"movies\",\n  // initial state\n  initialState,\n  // reducers/actions object\n  reducers: {\n    removeSelectMovieOrShow: state => {\n      state.selectMovieOrShow = {};\n    }\n  },\n  // extra reducers handle work outside the component\n  extraReducers: {\n    // extra reducers for all movies\n    [fetchAsyncMovies.pending]: () => {\n      console.log(\"pending\");\n    },\n    [fetchAsyncMovies.fulfilled]: (state, _ref) => {\n      let {\n        payload\n      } = _ref;\n      console.log(\"fetched successflly\");\n      return { ...state,\n        movies: payload\n      };\n    },\n    [fetchAsyncMovies.rejected]: () => {\n      console.log(\"rejected\");\n    },\n    // extra reducers for all shows\n    [fetchAsyncShows.fulfilled]: (state, _ref2) => {\n      let {\n        payload\n      } = _ref2;\n      console.log(\"shows fetched successflly\");\n      return { ...state,\n        shows: payload\n      };\n    },\n    // extra reducers for single movie or show\n    [fetchAsyncMovieOrShowDetail.fulfilled]: (state, _ref3) => {\n      let {\n        payload\n      } = _ref3;\n      console.log(\"Fetched Successfully!\");\n      return { ...state,\n        selectMovieOrShow: payload\n      };\n    }\n  }\n});\nexport const {\n  removeSelectMovieOrShow\n} = movieSlice.actions; // funcs to get all the movies and shows in the state\n\nexport const getAllMovies = state => state.movies.movies;\nexport const getAllShows = state => state.movies.shows; // func to get the selected movie or show details\n\nexport const getSelectMovieOrShow = state => state.movies.selectMovieOrShow;\nexport default movieSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","MovieApi","APIKey","fetchAsyncMovies","term","response","get","data","fetchAsyncShows","fetchAsyncMovieOrShowDetail","id","initialState","movies","shows","selectMovieOrShow","movieSlice","name","reducers","removeSelectMovieOrShow","state","extraReducers","pending","console","log","fulfilled","payload","rejected","actions","getAllMovies","getAllShows","getSelectMovieOrShow","reducer"],"sources":["/home/miki/Documents/Programming/redux-toolkit-movie-rating-app/src/features/movies/movieSlice.js"],"sourcesContent":["// import createSlice, createAsyncThunk\n// thunk is there for asynchronous tasks\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport MovieApi from \"../../common/api/MovieApi\";\nimport { APIKey } from \"../../common/api/MovieApiKey\";\n\n// the thunk takes two arguments - name (string) and a payload-creator callback function\n// the name is usually a combo of the reducer's name and the name of the variable the thunk is assigned to\n// the callback function, in this case, is the movie fetch function\n// optionally, the thunk can take a third argument - an object\n\nexport const fetchAsyncMovies = createAsyncThunk(\n    \"movies/fetchAsyncMovies\",\n\n    async (term) => {\n        const response = await MovieApi.get(\n            `?apiKey=${APIKey}&s=${term}&type=movie`\n        );\n        return response.data;\n    }\n);\n\nexport const fetchAsyncShows = createAsyncThunk(\n    \"movies/fetchAsyncShows\",\n\n    async (term) => {\n        const response = await MovieApi.get(\n            `?apiKey=${APIKey}&s=${term}&type=series`\n        );\n        return response.data;\n    }\n);\n\nexport const fetchAsyncMovieOrShowDetail = createAsyncThunk(\n    \"movies/fetchAsyncMovieOrShowDetail\",\n    async (id) => {\n        const response = await MovieApi.get(\n            `?apiKey=${APIKey}&i=${id}&Plot=full`\n        );\n        return response.data;\n    }\n);\n\n// initial state\nconst initialState = {\n    movies: {},\n    shows: {},\n    selectMovieOrShow: {},\n};\n\n// create the movies slice\nconst movieSlice = createSlice({\n    // name of the slice\n    name: \"movies\",\n    // initial state\n    initialState,\n    // reducers/actions object\n    reducers: {\n        removeSelectMovieOrShow: (state) => {\n            state.selectMovieOrShow = {};\n        },\n    },\n    // extra reducers handle work outside the component\n    extraReducers: {\n        // extra reducers for all movies\n        [fetchAsyncMovies.pending]: () => {\n            console.log(\"pending\");\n        },\n        [fetchAsyncMovies.fulfilled]: (state, { payload }) => {\n            console.log(\"fetched successflly\");\n            return { ...state, movies: payload };\n        },\n        [fetchAsyncMovies.rejected]: () => {\n            console.log(\"rejected\");\n        },\n        // extra reducers for all shows\n        [fetchAsyncShows.fulfilled]: (state, { payload }) => {\n            console.log(\"shows fetched successflly\");\n            return { ...state, shows: payload };\n        },\n        // extra reducers for single movie or show\n        [fetchAsyncMovieOrShowDetail.fulfilled]: (state, { payload }) => {\n            console.log(\"Fetched Successfully!\");\n            return { ...state, selectMovieOrShow: payload };\n        },\n    },\n});\n\nexport const { removeSelectMovieOrShow } = movieSlice.actions;\n\n// funcs to get all the movies and shows in the state\nexport const getAllMovies = (state) => state.movies.movies;\nexport const getAllShows = (state) => state.movies.shows;\n// func to get the selected movie or show details\nexport const getSelectMovieOrShow = (state) => state.movies.selectMovieOrShow;\n\nexport default movieSlice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}