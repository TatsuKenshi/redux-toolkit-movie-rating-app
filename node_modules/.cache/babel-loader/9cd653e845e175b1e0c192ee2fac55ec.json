{"ast":null,"code":"// import createSlice, createAsyncThunk\n// thunk is there for asynchronous tasks\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\"; // the thunk takes two arguments - name (string) and callback function\n// the name is usually a combo of the reducer's name and the name of the variable the thunk is assigned to\n// the callback function, in this case, is the movie fetch function\n\nconst fetchAsyncMovies = createAsyncThunk(\"movies/fetchAsyncMovies\", () => {}); // initial state\n\nconst initialState = {\n  movies: {}\n}; // create the movies slice\n\nconst movieSlice = createSlice({\n  // name of the slice\n  name: \"movies\",\n  // initial state\n  initialState,\n  // reducers/actions object\n  reducers: {\n    addMovies: (state, _ref) => {\n      let {\n        payload\n      } = _ref;\n      // immer takes care of state immutability\n      state.movies = payload;\n    }\n  }\n});\nexport const {\n  addMovies\n} = movieSlice.actions; // func to get all the movies in the state\n\nexport const getAllMovies = state => state.movies.movies;\nexport default movieSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","fetchAsyncMovies","initialState","movies","movieSlice","name","reducers","addMovies","state","payload","actions","getAllMovies","reducer"],"sources":["/home/miki/Documents/Programming/redux-toolkit-movie-rating-app/src/features/movies/movieSlice.js"],"sourcesContent":["// import createSlice, createAsyncThunk\n// thunk is there for asynchronous tasks\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\n// the thunk takes two arguments - name (string) and callback function\n// the name is usually a combo of the reducer's name and the name of the variable the thunk is assigned to\n// the callback function, in this case, is the movie fetch function\nconst fetchAsyncMovies = createAsyncThunk(\"movies/fetchAsyncMovies\", () => {});\n\n// initial state\nconst initialState = {\n    movies: {},\n};\n\n// create the movies slice\nconst movieSlice = createSlice({\n    // name of the slice\n    name: \"movies\",\n    // initial state\n    initialState,\n    // reducers/actions object\n    reducers: {\n        addMovies: (state, { payload }) => {\n            // immer takes care of state immutability\n            state.movies = payload;\n        },\n    },\n});\n\nexport const { addMovies } = movieSlice.actions;\n\n// func to get all the movies in the state\nexport const getAllMovies = (state) => state.movies.movies;\nexport default movieSlice.reducer;\n"],"mappings":"AAAA;AACA;AACA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C,C,CAEA;AACA;AACA;;AACA,MAAMC,gBAAgB,GAAGD,gBAAgB,CAAC,yBAAD,EAA4B,MAAM,CAAE,CAApC,CAAzC,C,CAEA;;AACA,MAAME,YAAY,GAAG;EACjBC,MAAM,EAAE;AADS,CAArB,C,CAIA;;AACA,MAAMC,UAAU,GAAGL,WAAW,CAAC;EAC3B;EACAM,IAAI,EAAE,QAFqB;EAG3B;EACAH,YAJ2B;EAK3B;EACAI,QAAQ,EAAE;IACNC,SAAS,EAAE,CAACC,KAAD,WAAwB;MAAA,IAAhB;QAAEC;MAAF,CAAgB;MAC/B;MACAD,KAAK,CAACL,MAAN,GAAeM,OAAf;IACH;EAJK;AANiB,CAAD,CAA9B;AAcA,OAAO,MAAM;EAAEF;AAAF,IAAgBH,UAAU,CAACM,OAAjC,C,CAEP;;AACA,OAAO,MAAMC,YAAY,GAAIH,KAAD,IAAWA,KAAK,CAACL,MAAN,CAAaA,MAA7C;AACP,eAAeC,UAAU,CAACQ,OAA1B"},"metadata":{},"sourceType":"module"}