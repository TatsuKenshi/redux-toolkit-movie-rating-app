{"ast":null,"code":"var _jsxFileName = \"/home/miki/Documents/Programming/redux-toolkit-movie-rating-app/src/components/MovieDetail/MovieDetail.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchAsyncMovieOrShowDetail } from \"../../features/movies/movieSlice\";\nimport { getSelectMovieOrShow } from \"../../features/movies/movieSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MovieDetail = () => {\n  _s();\n\n  const {\n    imdbID\n  } = useParams();\n  console.log(imdbID);\n  const dispatch = useDispatch(); // useSelector for the movie or show\n\n  const data = useSelector(getSelectMovieOrShow); // useRef to deal with rerendering in React 18\n\n  let fetchRef = useRef(true);\n  useEffect(() => {\n    if (fetchRef.current) {\n      fetchRef.current = false;\n      dispatch(fetchAsyncMovieOrShowDetail(imdbID));\n    }\n  }, [dispatch, imdbID]);\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"MovieDetail\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 12\n  }, this);\n};\n\n_s(MovieDetail, \"u67P2iUB/j0RH8eSMbvoccmvzxs=\", false, function () {\n  return [useParams, useDispatch, useSelector];\n});\n\n_c = MovieDetail;\nexport default MovieDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieDetail\");","map":{"version":3,"names":["React","useEffect","useRef","useParams","useDispatch","useSelector","fetchAsyncMovieOrShowDetail","getSelectMovieOrShow","MovieDetail","imdbID","console","log","dispatch","data","fetchRef","current"],"sources":["/home/miki/Documents/Programming/redux-toolkit-movie-rating-app/src/components/MovieDetail/MovieDetail.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchAsyncMovieOrShowDetail } from \"../../features/movies/movieSlice\";\nimport { getSelectMovieOrShow } from \"../../features/movies/movieSlice\";\n\nconst MovieDetail = () => {\n    const { imdbID } = useParams();\n    console.log(imdbID);\n    const dispatch = useDispatch();\n\n    // useSelector for the movie or show\n    const data = useSelector(getSelectMovieOrShow);\n\n    // useRef to deal with rerendering in React 18\n    let fetchRef = useRef(true);\n\n    useEffect(() => {\n        if (fetchRef.current) {\n            fetchRef.current = false;\n            dispatch(fetchAsyncMovieOrShowDetail(imdbID));\n        }\n    }, [dispatch, imdbID]);\n\n    console.log(data);\n\n    return <div>MovieDetail</div>;\n};\n\nexport default MovieDetail;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,2BAAT,QAA4C,kCAA5C;AACA,SAASC,oBAAT,QAAqC,kCAArC;;;AAEA,MAAMC,WAAW,GAAG,MAAM;EAAA;;EACtB,MAAM;IAAEC;EAAF,IAAaN,SAAS,EAA5B;EACAO,OAAO,CAACC,GAAR,CAAYF,MAAZ;EACA,MAAMG,QAAQ,GAAGR,WAAW,EAA5B,CAHsB,CAKtB;;EACA,MAAMS,IAAI,GAAGR,WAAW,CAACE,oBAAD,CAAxB,CANsB,CAQtB;;EACA,IAAIO,QAAQ,GAAGZ,MAAM,CAAC,IAAD,CAArB;EAEAD,SAAS,CAAC,MAAM;IACZ,IAAIa,QAAQ,CAACC,OAAb,EAAsB;MAClBD,QAAQ,CAACC,OAAT,GAAmB,KAAnB;MACAH,QAAQ,CAACN,2BAA2B,CAACG,MAAD,CAA5B,CAAR;IACH;EACJ,CALQ,EAKN,CAACG,QAAD,EAAWH,MAAX,CALM,CAAT;EAOAC,OAAO,CAACC,GAAR,CAAYE,IAAZ;EAEA,oBAAO;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;AACH,CArBD;;GAAML,W;UACiBL,S,EAEFC,W,EAGJC,W;;;KANXG,W;AAuBN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}